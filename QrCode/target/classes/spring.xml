<?xml version="1.0" encoding="GBK"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
    xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:aop="http://www.springframework.org/schema/aop" xmlns:task="http://www.springframework.org/schema/task"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xsi:schemaLocation="
    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
    http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.1.xsd
    http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
    ">
    <context:component-scan base-package="com.jz.entity,com.jz.dao,com.jz.service"/>

    <bean id="propertyConfigurer"
        class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:db.properties</value>
            </list>
        </property>
    </bean>
    <!-- 配置数据源 -->
    <bean name="driverManagerDataSource" class="com.alibaba.druid.pool.DruidDataSource"
        init-method="init" destroy-method="close">
        <!-- 数据库基本信息配置 -->
        <!-- <property name="driverClassName" value="${driver}" /> -->
        <property name="url" value="${url}" />
        <property name="username" value="${username}" />
        <property name="password" value="${password}" />
        
    </bean>
    


    <bean class="org.mybatis.spring.SqlSessionFactoryBean" id="sqlSessionFactoryBean">
        <property name="dataSource" ref="driverManagerDataSource" />
        <property name="mapperLocations" value="classpath:com/jz/mapper/*.xml" />
        <property name="plugins">
            <array>
                <bean class="com.github.pagehelper.PageInterceptor">
                    <property name="properties">
                        <!--  使用下面的方式配置参数，一行配置一个-->
                        <value>
                            offsetAsPageNum=true
                            rowBoundsWithCount=true
                            pageSizeZero=true
                            reasonable=true
                        </value>
                    </property>
                </bean>
            </array>
        </property>
        <!-- <property name="plugins">  
                <array>  
                    <bean class="com.github.pagehelper.PageInterceptor">  
                        <property name="properties">  
                            <value>  
                                helperDialect=mysql
                                offsetAsPageNum=true
	                            rowBoundsWithCount=true
	                            pageSizeZero=true
	                            reasonable=true 
                            </value>  
                        </property>  
                    </bean>  
                </array>  
            </property>  -->
    </bean>

    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer"
        id="mapperScannerConfigurer">
        <property name="basePackage" value="com.jz.dao" />
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactoryBean" />
    </bean>



    
    
    
    
    
    <!-- 配置事务管理器 -->
        <!-- <bean class="org.springframework.jdbc.datasource.DataSourceTransactionManager" id="transactionManager">
            <property name="dataSource" ref="driverManagerDataSource"></property>
        </bean>
        <tx:advice id="advice"     transaction-manager="transactionManager">
            <tx:attributes>
                <tx:method name="*" propagation="REQUIRED"/>*是对所有方法都加
            </tx:attributes>
        </tx:advice>
        用切点把事务切进去
        <aop:config>
            <aop:pointcut expression="execution(* com.jz.service..*.*(..))" id="pointcut"/>
            <aop:advisor advice-ref="advice" pointcut-ref="pointcut"/>
        </aop:config>

	    <bean id="dataSourceTransactionManager"
	        class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
	        <property name="dataSource" ref="driverManagerDataSource" />
	    </bean>

     <tx:annotation-driven transaction-manager="dataSourceTransactionManager" proxy-target-class="true" />  -->





   <!-- <aop:config>
	  <aop:pointcut id="transactionPointcut"
	      expression="execution(* com.jz.service..*.*(..))" />
	  <aop:advisor advice-ref="txAdvice"
	pointcut-ref="transactionPointcut" />
   </aop:config> -->
   
   
   <!-- 定义事务处理方式 -->
	<!-- <tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="delete*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="insert*" propagation="REQUIRED" />
			<tx:method name="ajax*" propagation="REQUIRED" />
			<tx:method name="query*" propagation="SUPPORTS" />
		</tx:attributes>
	</tx:advice>
	
	<tx:annotation-driven transaction-manager="transactionManager"/> -->
   
   
	<!-- <tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
		<tx:method name="save*" rollback-for="Throwable" />
		<tx:method name="update*" rollback-for="Throwable" />
		<tx:method name="delete*" rollback-for="Throwable" />
		<tx:method name="*" read-only="true"
		propagation="NOT_SUPPORTED" />
		</tx:attributes>
	</tx:advice>
-->



    <bean id="dataSourceTransactionManager"
        class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="driverManagerDataSource" />
    </bean>
  
    <tx:annotation-driven transaction-manager="dataSourceTransactionManager" proxy-target-class="true" /> 
</beans>